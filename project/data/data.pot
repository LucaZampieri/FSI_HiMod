[./set]
  verbose = 1
  dataFileHasBeenRead = 1
[../]

[himod] # the total number of modes should be even
  drho    = 0
  mx      = 6                # modes for Vx
  mr      = 6                # modes for Vr
  mtheta  = 6                # modes for Vtheta
  mp      = 4                # modes for the pressure
[../]

[mesh]
    num_elements        = 50 # num of elements in x-discretization
    polyTypeVelocity    = P2
    polyTypePressure    = P1
[../]

[fluid]
    [./physics]
        nu        = 0.035     # cinematic viscosity
    [../]
    [./structure]
        case_radius = 0         # 0 to use the functions Radius and dRadius | 1 Stenosis | 2 Aneurysm | 3 Cone | 4 internal deformation
        L           = 10         # length of the cylinder
        occlusion   = 0.45      # occlusion for case 1 stenosis (also used in case 2)
        rho_s       = 1         # Density (specific mass) of the membrane (Wall)
        h_s         = 0.05      # Width of the membrane (Wall)
        e           = 4.e5      # e = Young * width / ((1 - poisson*poisson) * R*R)
        Rin         = 1.5       # input radius for cases 3&4
        Rou         = 0.5       # output radius for cases 3&4
        Z0          = 5.        # middle length for case 4
        delta0      = 0.45      # regulates how much occlusion we do
    [../]
[../]

[time]
    t0  = 0.0           # initial time
    dt  = 0.01        # time step
    T   = 0.1         # final time
[../]

[functions]
    ux0 =     0      #1000      #30
    ur0 =     0      #10     #100*sin(t*100*2*3.14)
    utheta0 = 0      #10

    Radius  = 0.5 # Radius function
    dRadius = 0

    p1 = 100
    p2 = 0

    fx     = 0                           #1000*sin(t)
    fr     = 0       #50000*1*x    #2000*t
    ftheta = 0                           #1000*cos(t)
[../]

######  Data for the solvers #####

[fixedPoint]
    PF_max  = 1000
    tol     = 1e-4
[../]

[prec]  # used by the solver, see FSISolver.cpp
    prectype                     = Ifpack # Ifpack or ML
    displayList                  = false

    [./ifpack]
        overlap                  = 2

        [./fact]
            ilut_level-of-fill   = 1
            drop_tolerance       = 1.e-5
            relax_value          = 0

        [../amesos]
            solvertype           = Amesos_KLU # Amesos_KLU or Amesos_Umfpack

        [../partitioner]
            overlap              = 2

        [../schwarz]
            reordering_type      = none #metis, rcm, none
            filter_singletons    = true

    [../]
  [../]
[../]
[exporter]
    start=0
    save=1
    multimesh=false
[../]
